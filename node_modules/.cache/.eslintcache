[{"/Users/mingoo/Documents/GitHub/search/image-search/src/index.js":"1","/Users/mingoo/Documents/GitHub/search/image-search/src/reportWebVitals.js":"2","/Users/mingoo/Documents/GitHub/search/image-search/src/App.js":"3","/Users/mingoo/Documents/GitHub/search/image-search/src/store.js":"4","/Users/mingoo/Documents/GitHub/search/image-search/src/SearchList.js":"5","/Users/mingoo/Documents/GitHub/search/image-search/src/api.js":"6"},{"size":695,"mtime":1668836893782,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1668685329092,"results":"9","hashOfConfig":"8"},{"size":714,"mtime":1668841038881,"results":"10","hashOfConfig":"8"},{"size":674,"mtime":1668842484320,"results":"11","hashOfConfig":"8"},{"size":2141,"mtime":1668859175905,"results":"12","hashOfConfig":"8"},{"size":327,"mtime":1668838124761,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dbv5vl",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mingoo/Documents/GitHub/search/image-search/src/index.js",[],[],"/Users/mingoo/Documents/GitHub/search/image-search/src/reportWebVitals.js",[],[],"/Users/mingoo/Documents/GitHub/search/image-search/src/App.js",["34"],[],"import logo from './logo.svg';\nimport './App.css';\nimport { Routes, Route, useNavigate } from 'react-router-dom'\nimport SearchList from './SearchList';\n\nfunction App() {\n\n\nlet navigate = useNavigate();\n  return (\n    <div className='App'>\n    <Routes>\n      <Route path=\"/search\" element={<SearchList></SearchList>}></Route>\n      <Route path=\"/\" element={ <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <a\n          className=\"App-link\"\n          onClick={()=>{ navigate('/search') }}\n        >\n          검색하고싶으면 누르셈\n        </a>\n      </header>\n    </div>}/>\n    </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mingoo/Documents/GitHub/search/image-search/src/store.js",[],[],"/Users/mingoo/Documents/GitHub/search/image-search/src/SearchList.js",["35","36"],[],"import { bookSearch } from './api';\nimport { useEffect} from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {changeSearch} from \"./store\";\nimport { changeQuery } from './store';\nimport styled from 'styled-components'\n\nlet Box = styled.div`\n  margin:auto;\n`\nlet Header = styled.div`\nwidth:100%;\nheight:50px;\nbackground:#F1D3B3;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n\n`\nlet SearchBox = styled.div`\n  display:flex;\n  flex-wrap:wrap;\n  width : 100%;\n  margin:auto;\n\n`\n\nlet SearchItemBox = styled.div`\n   width:20%;\n   height:100%;\n`\nlet SearchItems = styled.img`\nwidth:100%;\ncursor:pointer;\n\n`\n\nfunction SearchList(){\n    let states = useSelector((state) => {return state});\n    let dispatch = useDispatch()\n\n    console.log(states);    \n    \n    useEffect(() => {\n        if(states.searchQuery.length > 0){\n            seachHandler(true)\n        }\n    },[states.searchQuery]);\n\n    const seachHandler = async () => {\n        try{\n          //parameter\n          const params = {\n            query : states.searchQuery,\n            sort : 'accuracy',\n            page : 1,\n            size : 40,\n          }\n          const {data} = await bookSearch(params);\n          dispatch(changeSearch(data.documents));\n        } catch (e){\n            alert(e);\n        }\n    };\n\n    const handleOnKeyPress = e => {\n        if(e.key == 'Enter'){\n            searchImage(e.target.value);\n        }\n    }\n    const searchImage = (text) => {\n        dispatch(changeQuery(text));\n    }\n\n    return(\n        <Box>\n            <Header>\n            <p>검색어를 입력해주세요!</p>\n            <input type=\"text\" onKeyUp={handleOnKeyPress}></input>\n            </Header>\n            <SearchBox>\n              {\n                states.searchData.map((items) => {\n                  return(\n                   <SearchItemBox key={items.image_url}>\n                    <SearchItems src={items.thumbnail_url}></SearchItems>\n                   </SearchItemBox>\n                        )\n                })\n              }\n            </SearchBox>\n        </Box>\n        \n    )\n}\n\nexport default SearchList;\n    \n\n","/Users/mingoo/Documents/GitHub/search/image-search/src/api.js",[],[],{"ruleId":"37","severity":1,"message":"38","line":17,"column":9,"nodeType":"39","endLine":20,"endColumn":10},{"ruleId":"40","severity":1,"message":"41","line":48,"column":7,"nodeType":"42","endLine":48,"endColumn":27,"suggestions":"43"},{"ruleId":"44","severity":1,"message":"45","line":67,"column":18,"nodeType":"46","messageId":"47","endLine":67,"endColumn":20},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'seachHandler'. Either include it or remove the dependency array.","ArrayExpression",["48"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"49","fix":"50"},"Update the dependencies array to be: [seachHandler, states.searchQuery]",{"range":"51","text":"52"},[899,919],"[seachHandler, states.searchQuery]"]